Time	Sum	Command
39	3258346	> fish_prompt
146	3253139	-> source /home/eutrius/.config/fish/functions/fish_prompt.fish
3	3	--> function fish_prompt...
4	4	--> status is-interactive
35	3246759	--> _tide_remove_unusable_items
55	57	---> source /home/eutrius/.config/fish/functions/_tide_remove_unusable_items.fish
2	2	----> function _tide_remove_unusable_items...
5	5	---> set -l removed_items
277	3245192	---> for item in aws chruby crystal docker git go java kubectl nix_shell node php rustc terraform toolbox virtual_env...
5	5	----> set -l cli_names $item
4	4	----> switch $item...
113013	113013	----> type --query $cli_names
28	28	----> set -a removed_items $item
6	6	----> set -l cli_names $item
5	5	----> switch $item...
108957	108957	----> type --query $cli_names
24	24	----> set -a removed_items $item
6	6	----> set -l cli_names $item
4	4	----> switch $item...
165567	165567	----> type --query $cli_names
52	52	----> set -a removed_items $item
16	16	----> set -l cli_names $item
9	9	----> switch $item...
270355	270355	----> type --query $cli_names
42	42	----> set -l cli_names $item
11	11	----> switch $item...
223377	223377	----> type --query $cli_names
21	21	----> set -l cli_names $item
5	5	----> switch $item...
189789	189789	----> type --query $cli_names
45	45	----> set -a removed_items $item
13	13	----> set -l cli_names $item
8	8	----> switch $item...
176112	176112	----> type --query $cli_names
37	37	----> set -a removed_items $item
9	9	----> set -l cli_names $item
8	8	----> switch $item...
165692	165692	----> type --query $cli_names
26	26	----> set -a removed_items $item
6	6	----> set -l cli_names $item
6	9	----> switch $item...
3	3	-----> set cli_names nix nix-shell
335176	335176	----> type --query $cli_names
57	57	----> set -a removed_items $item
14	14	----> set -l cli_names $item
11	11	----> switch $item...
240786	240786	----> type --query $cli_names
38	38	----> set -l cli_names $item
10	10	----> switch $item...
193561	193561	----> type --query $cli_names
31	31	----> set -a removed_items $item
7	7	----> set -l cli_names $item
5	5	----> switch $item...
195804	195804	----> type --query $cli_names
25	25	----> set -a removed_items $item
5	5	----> set -l cli_names $item
5	5	----> switch $item...
206846	206846	----> type --query $cli_names
43	43	----> set -a removed_items $item
11	11	----> set -l cli_names $item
8	8	----> switch $item...
227145	227145	----> type --query $cli_names
44	44	----> set -a removed_items $item
11	11	----> set -l cli_names $item
10	16	----> switch $item...
6	6	-----> set cli_names python python3
431995	431995	----> type --query $cli_names
423	571	---> set -U _tide_left_items (for item in $tide_left_prompt_items
        contains $item $removed_items || echo $item
    end)
38	148	----> for item in $tide_left_prompt_items...
36	36	-----> contains $item $removed_items
10	10	-----> echo $item
19	19	-----> contains $item $removed_items
6	6	-----> echo $item
14	14	-----> contains $item $removed_items
7	7	-----> echo $item
13	13	-----> contains $item $removed_items
5	5	-----> echo $item
510	899	---> set -U _tide_right_items (for item in $tide_right_prompt_items
        contains $item $removed_items || echo $item
    end)
80	389	----> for item in $tide_right_prompt_items...
29	29	-----> contains $item $removed_items
10	10	-----> echo $item
43	43	-----> contains $item $removed_items
14	14	-----> echo $item
22	22	-----> contains $item $removed_items
8	8	-----> echo $item
13	13	-----> contains $item $removed_items
6	6	-----> echo $item
13	13	-----> contains $item $removed_items
4	4	-----> echo $item
13	13	-----> contains $item $removed_items
5	5	-----> echo $item
12	12	-----> contains $item $removed_items
12	12	-----> contains $item $removed_items
14	14	-----> contains $item $removed_items
12	12	-----> contains $item $removed_items
12	12	-----> contains $item $removed_items
11	11	-----> contains $item $removed_items
12	12	-----> contains $item $removed_items
11	11	-----> contains $item $removed_items
11	11	-----> contains $item $removed_items
11	11	-----> contains $item $removed_items
11	11	-----> contains $item $removed_items
62	1028	--> _tide_cache_variables
127	133	---> source /home/eutrius/.config/fish/functions/_tide_cache_variables.fish
6	6	----> function _tide_cache_variables...
440	440	---> set_color $tide_prompt_color_separator_same_color | read -gx _tide_color_separator_same_color
41	41	---> contains git $_tide_left_items $_tide_right_items
277	277	---> set_color $tide_git_color_branch | read -gx _tide_location_color
9	55	---> if contains private_mode $_tide_left_items $_tide_right_items...
36	36	----> contains private_mode $_tide_left_items $_tide_right_items
10	10	----> set -e _tide_private_mode
14	14	---> test "$tide_prompt_pad_items" = true
6	6	---> set -e _tide_pad
43	1132	--> _tide_parent_dirs
93	101	---> source /home/eutrius/.config/fish/functions/_tide_parent_dirs.fish
8	8	----> function _tide_parent_dirs --on-variable PWD...
288	988	---> set -g _tide_parent_dirs (string escape (
        for dir in (string split / -- $PWD)
            set -la parts $dir
            string join / -- $parts
        end))
364	700	----> string escape (
        for dir in (string split / -- $PWD)
            set -la parts $dir
            string join / -- $parts
        end)
199	336	-----> for dir in (string split / -- $PWD)...
23	23	------> string split / -- $PWD
28	28	------> set -la parts $dir
13	13	------> string join / -- $parts
10	10	------> set -la parts $dir
10	10	------> string join / -- $parts
7	7	------> set -la parts $dir
14	14	------> string join / -- $parts
6	6	------> set -la parts $dir
10	10	------> string join / -- $parts
6	6	------> set -la parts $dir
10	10	------> string join / -- $parts
384	2535	--> source (functions --details _tide_pwd)
63	1048	---> functions --details _tide_pwd
139	985	----> source /home/eutrius/.config/fish/functions/_tide_pwd.fish
151	151	-----> set_color -o $tide_pwd_color_anchors | read -l color_anchors
202	202	-----> set_color $tide_pwd_color_truncated_dirs | read -l color_truncated
216	252	-----> set -l reset_to_color_dirs (set_color normal -b $tide_pwd_bg_color; set_color $tide_pwd_color_dirs)
23	23	------> set_color normal -b $tide_pwd_bg_color
13	13	------> set_color $tide_pwd_color_dirs
15	15	-----> set -l unwritable_icon $tide_pwd_icon_unwritable' '
9	9	-----> set -l home_icon $tide_pwd_icon_home' '
7	7	-----> set -l pwd_icon $tide_pwd_icon' '
204	210	-----> eval "function _tide_pwd
    if set -l split_pwd (string replace -r '^$HOME' '~' -- \$PWD | string split /)
        test -w . && set -f split_output \"$pwd_icon\$split_pwd[1]\" \$split_pwd[2..] ||
            set -f split_output \"$unwritable_icon\$split_pwd[1]\" \$split_pwd[2..]
        set split_output[-1] \"$color_anchors\$split_output[-1]$reset_to_color_dirs\"
    else
        set -f split_output \"$home_icon$color_anchors~\"
    end

    string join / -- \$split_output | string length -V | read -g _tide_pwd_len

    i=1 for dir_section in \$split_pwd[2..-2]
        string join -- / \$split_pwd[..\$i] | string replace '~' $HOME | read -l parent_dir # Uses i before increment

        math \$i+1 | read i

        if path is \$parent_dir/\$dir_section/\$tide_pwd_markers
            set split_output[\$i] \"$color_anchors\$dir_section$reset_to_color_dirs\"
        else if test \$_tide_pwd_len -gt \$dist_btwn_sides
            set -l trunc
            while string match -qr \"(?<trunc>\$trunc.)\" \$dir_section && v=\$parent_dir/\$trunc*/ set -q v[2]
            end
            test -n \"\$trunc\" && set split_output[\$i] \"$color_truncated\$trunc$reset_to_color_dirs\" &&
                string join / \$split_output | string length -V | read _tide_pwd_len
        end
    end

    string join -- / \"$reset_to_color_dirs\$split_output[1]\" \$split_output[2..]
end"
6	6	------> function _tide_pwd...
347	347	---> set_color -o $tide_pwd_color_anchors | read -l color_anchors
305	305	---> set_color $tide_pwd_color_truncated_dirs | read -l color_truncated
185	236	---> set -l reset_to_color_dirs (set_color normal -b $tide_pwd_bg_color; set_color $tide_pwd_color_dirs)
35	35	----> set_color normal -b $tide_pwd_bg_color
16	16	----> set_color $tide_pwd_color_dirs
17	17	---> set -l unwritable_icon $tide_pwd_icon_unwritable' '
8	8	---> set -l home_icon $tide_pwd_icon_home' '
8	8	---> set -l pwd_icon $tide_pwd_icon' '
164	182	---> eval "function _tide_pwd
    if set -l split_pwd (string replace -r '^$HOME' '~' -- \$PWD | string split /)
        test -w . && set -f split_output \"$pwd_icon\$split_pwd[1]\" \$split_pwd[2..] ||
            set -f split_output \"$unwritable_icon\$split_pwd[1]\" \$split_pwd[2..]
        set split_output[-1] \"$color_anchors\$split_output[-1]$reset_to_color_dirs\"
    else
        set -f split_output \"$home_icon$color_anchors~\"
    end

    string join / -- \$split_output | string length -V | read -g _tide_pwd_len

    i=1 for dir_section in \$split_pwd[2..-2]
        string join -- / \$split_pwd[..\$i] | string replace '~' $HOME | read -l parent_dir # Uses i before increment

        math \$i+1 | read i

        if path is \$parent_dir/\$dir_section/\$tide_pwd_markers
            set split_output[\$i] \"$color_anchors\$dir_section$reset_to_color_dirs\"
        else if test \$_tide_pwd_len -gt \$dist_btwn_sides
            set -l trunc
            while string match -qr \"(?<trunc>\$trunc.)\" \$dir_section && v=\$parent_dir/\$trunc*/ set -q v[2]
            end
            test -n \"\$trunc\" && set split_output[\$i] \"$color_truncated\$trunc$reset_to_color_dirs\" &&
                string join / \$split_output | string length -V | read _tide_pwd_len
        end
    end

    string join -- / \"$reset_to_color_dirs\$split_output[1]\" \$split_output[2..]
end"
18	18	----> function _tide_pwd...
13	13	--> set -l prompt_var _tide_prompt_$fish_pid
541	541	--> set -U $prompt_var
159	159	--> set_color normal | read -l color_normal
145	145	--> status fish-path | read -l fish_path
19	19	--> function _tide_refresh_prompt --on-variable $prompt_var --on-variable COLUMNS...
29	628	--> if contains newline $_tide_left_items...
20	20	---> contains newline $_tide_left_items
15	15	---> test "$tide_prompt_add_newline_before" = true
13	13	---> set -l add_newline '\n'
348	348	---> set_color $tide_prompt_color_frame_and_connection -b normal | read -l prompt_and_frame_color
24	24	---> set -l column_offset 5
22	22	---> test "$tide_left_prompt_frame_enabled" = true
8	8	---> test "$tide_right_prompt_frame_enabled" = true
140	149	---> eval "
function fish_prompt
    _tide_status=\$status _tide_pipestatus=\$pipestatus if not set -e _tide_repaint
        jobs -q && set -lx _tide_jobs
        $fish_path -c \"set _tide_pipestatus \$_tide_pipestatus
set _tide_parent_dirs \$_tide_parent_dirs
PATH=\$(string escape \"\$PATH\") CMD_DURATION=\$CMD_DURATION fish_bind_mode=\$fish_bind_mode set $prompt_var (_tide_2_line_prompt)\" &
        builtin disown

        command kill \$_tide_last_pid 2>/dev/null
        set -g _tide_last_pid \$last_pid
    end

    math \$COLUMNS-(string length -V \"\$$prompt_var[1][1]\$$prompt_var[1][3]\")+$column_offset | read -lx dist_btwn_sides

    echo -ns $add_newline'$top_left_frame'(string replace @PWD@ (_tide_pwd) \"\$$prompt_var[1][1]\")'$prompt_and_frame_color'
    string repeat -Nm(math max 0, \$dist_btwn_sides-\$_tide_pwd_len) '$tide_prompt_icon_connection'
    echo -ns \"\$$prompt_var[1][3]$top_right_frame\"\n\"$bot_left_frame\$$prompt_var[1][2]$color_normal \"
end

function fish_right_prompt
    string unescape \"\$$prompt_var[1][4]$bot_right_frame$color_normal\"
end"
6	6	----> function fish_prompt...
3	3	----> function fish_right_prompt...
22	27	--> eval "function _tide_on_fish_exit --on-event fish_exit
    set -e $prompt_var
end"
5	5	---> function _tide_on_fish_exit --on-event fish_exit...
37	2798	-> if not set -e _tide_repaint...
9	9	--> not set -e _tide_repaint
31	31	--> jobs -q
1117	1200	--> /usr/bin/fish -c "set _tide_pipestatus $_tide_pipestatus
set _tide_parent_dirs $_tide_parent_dirs
PATH=$(string escape "$PATH") CMD_DURATION=$CMD_DURATION fish_bind_mode=$fish_bind_mode set _tide_prompt_12418 (_tide_2_line_prompt)" &
83	83	---> string escape "$PATH"
10	10	--> builtin disown
1487	1487	--> command kill $_tide_last_pid 2>/dev/null
24	24	--> set -g _tide_last_pid $last_pid
431	447	-> math $COLUMNS-(string length -V "$_tide_prompt_12418[1]$_tide_prompt_12418[3]")+5 | read -lx dist_btwn_sides
16	16	--> string length -V "$_tide_prompt_12418[1]$_tide_prompt_12418[3]"
178	1753	-> echo -ns \n''(string replace @PWD@ (_tide_pwd) "$_tide_prompt_12418[1]")'(B[m(B[m[38;5;242m'
226	1575	--> string replace @PWD@ (_tide_pwd) "$_tide_prompt_12418[1]"
18	1349	---> _tide_pwd
10	486	----> if set -l split_pwd (string replace -r '^/home/eutrius' '~' -- $PWD | string split /)...
212	442	-----> set -l split_pwd (string replace -r '^/home/eutrius' '~' -- $PWD | string split /)
230	230	------> string replace -r '^/home/eutrius' '~' -- $PWD | string split /
12	12	-----> test -w .
14	14	-----> set -f split_output "$split_pwd[1]" $split_pwd[2..]
8	8	-----> set split_output[-1] "[1m[38;5;39m$split_output[-1](B[m(B[m(B[m[38;5;31m"
445	445	----> string join / -- $split_output | string length -V | read -g _tide_pwd_len
29	387	----> for dir_section in $split_pwd[2..-2]...
199	199	-----> string join -- / $split_pwd[..$i] | string replace '~' /home/eutrius | read -l parent_dir
72	72	-----> math $i+1 | read i
4	87	-----> if path is $parent_dir/$dir_section/$tide_pwd_markers...
74	74	------> path is $parent_dir/$dir_section/$tide_pwd_markers
9	9	------> test $_tide_pwd_len -gt $dist_btwn_sides
13	13	----> string join -- / "(B[m(B[m(B[m[38;5;31m$split_output[1]" $split_output[2..]
132	149	-> string repeat -Nm(math max 0, $dist_btwn_sides-$_tide_pwd_len) ' '
17	17	--> math max 0, $dist_btwn_sides-$_tide_pwd_len
21	21	-> echo -ns "$_tide_prompt_12418[3]"\n"$_tide_prompt_12418[2](B[m "
16	16	> exit
7	2576	> _tide_on_fish_exit 0
16	2569	-> set -e _tide_prompt_12418
13	2553	--> _tide_refresh_prompt VARIABLE ERASE _tide_prompt_12418
2515	2515	---> set -g _tide_repaint
25	25	---> commandline -f repaint
